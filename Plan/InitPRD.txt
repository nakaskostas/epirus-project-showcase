### Product Requirements Document (PRD): Epirus Project Showcase Automator

#### 1. Επισκόπηση (Overview)

**1.1 Όραμα Προϊόντος (Product Vision):**
Να δημιουργηθεί ένα πλήρως αυτοματοποιημένο σύστημα, καθοδηγούμενο από ένα LLM Agent, το οποίο θα αναλαμβάνει τη δημιουργία μοντέρνων, στατικών ιστοσελίδων (single-page applications) για την παρουσίαση έργων της Περιφέρειας Ηπείρου. Ο στόχος είναι η μηδενική χειροκίνητη συγγραφή κώδικα από τον χρήστη για τη δημιουργία και δημοσίευση κάθε νέας ιστοσελίδας έργου.

**1.2 Βασικός Σκοπός (Core Purpose):**
Το σύστημα θα λαμβάνει ως είσοδο έναν φάκελο που περιέχει αδόμητα πολυμεσικά αρχεία ενός έργου (εικόνες, βίντεο, έγγραφα κ.λπ.), θα τα επεξεργάζεται και θα τα οργανώνει αυτόματα, και στη συνέχεια θα παράγει μια αισθητικά άρτια και λειτουργική ιστοσελίδα για την παρουσίασή τους.

**1.3 Βασικοί Χρήστες (Key Users):**
*   **LLM Agent (π.χ. Gemini):** Ο κύριος "χρήστης" που θα εκτελεί τις εντολές και θα υλοποιεί το σύστημα.
*   **Διαχειριστής Περιεχομένου (Content Manager):** Ο άνθρωπος που θα παρέχει τον αρχικό φάκελο του έργου και θα εκκινεί τη διαδικασία μέσω του LLM Agent.

---

#### 2. Λειτουργικές Απαιτήσεις (Functional Requirements)

**2.1 Αυτοματοποιημένη Ροή Εργασίας (Automated Workflow):**
Το σύστημα θα υλοποιεί μια διαδικασία δύο βασικών βημάτων, η οποία θα εκτελείται εξ ολοκλήρου από το LLM Agent μέσω ενός Command Line Interface (CLI).

**2.1.1 ΒΗΜΑ 1: Επεξεργασία & Οργάνωση Αρχείων**
*   **FR-1.1 Ανάγνωση Πηγής:** Το σύστημα πρέπει να μπορεί να διαβάσει τα αρχεία ενός έργου από διάφορες πηγές:
    *   Ένα public GitHub repository.
    *   Έναν τοπικό φάκελο στο σύστημα αρχείων.
    *   Έναν συμπιεσμένο φάκελο (π.χ. `.zip`).
*   **FR-1.2 Ανάλυση Αρχείων:** Το σύστημα θα σαρώνει τον φάκελο εισόδου, θα αναγνωρίζει όλους τους τύπους αρχείων (π.χ., `.jpg`, `.png`, `.mp4`, `.pdf`, `.docx`, `.xlsx`) και θα τους κατηγοριοποιεί.
*   **FR-1.3 Δημιουργία Δομής:** Το σύστημα θα δημιουργεί μια νέα, καθορισμένη δομή φακέλων εξόδου (π.χ., `public/assets/`) για να τοποθετήσει τα επεξεργασμένα αρχεία. Η προτεινόμενη δομή είναι:
    ```
    public/assets/
    ├── images/
    │   ├── optimized/  (Βελτιστοποιημένες εικόνες για το web)
    │   └── thumbnails/ (Μικρογραφίες)
    ├── videos/
    │   ├── optimized/  (Βελτιστοποιημένα βίντεο για το web)
    │   └── thumbnails/ (Posters/Thumbnails για τα βίντεο)
    ├── documents/      (PDFs, κείμενα κ.λπ.)
    └── downloads/      (Αρχεία προς λήψη, π.χ. σχέδια CAD)
    ```
*   **FR-1.4 Επεξεργασία Πολυμέσων:**
    *   **Εικόνες:** Αυτόματη βελτιστοποίηση (resize, συμπίεση σε φορμά WebP/AVIF με fallback σε JPEG) και δημιουργία μικρογραφιών.
    *   **Βίντεο:** Μετατροπή σε web-friendly formats (π.χ., MP4 H.264), βελτιστοποίηση και αυτόματη δημιουργία poster image.
    *   **Έγγραφα:**
        *   **PDF:** Εξαγωγή κειμένου ή/και μετατροπή των σελίδων σε εικόνες για προεπισκόπηση.
        *   **Word (.docx):** Μετατροπή περιεχομένου σε HTML.
        *   **Excel (.xlsx):** Εξαγωγή δεδομένων (π.χ. σε μορφή JSON).
*   **FR-1.5 Δημιουργία Metadata:** Το σύστημα θα παράγει ένα αρχείο `JSON` (π.χ., `project-data.json`) που θα περιέχει μια δομημένη αναπαράσταση όλων των επεξεργασμένων αρχείων, τις διαδρομές τους, και οποιαδήποτε εξαγόμενα δεδομένα (π.χ. κείμενο από έγγραφα). Αυτό το αρχείο θα είναι η "μοναδική πηγή αλήθειας" για τη δημιουργία της ιστοσελίδας.

**2.1.2 ΒΗΜΑ 2: Δημιουργία Στατικής Ιστοσελίδας**
*   **FR-2.1 Ανάγνωση Δεδομένων:** Το σύστημα θα διαβάζει το αρχείο `project-data.json` που δημιουργήθηκε στο Βήμα 1.
*   **FR-2.2 Δημιουργία Σελίδας:** Θα χρησιμοποιεί το framework **Astro** για να δημιουργήσει μια ενιαία στατική ιστοσελίδα (`index.astro`).
*   **FR-2.3 Δυναμική Δημιουργία Components:** Βάσει των διαθέσιμων δεδομένων, το σύστημα θα παράγει δυναμικά τα κατάλληλα UI components:
    *   Αν υπάρχουν εικόνες, θα δημιουργεί μια γκαλερί (π.χ., με Swiper.js) και ένα lightbox (PhotoSwipe).
    *   Αν υπάρχουν βίντεο, θα ενσωματώνει έναν video player (π.χ., Video.js).
    *   Αν υπάρχουν έγγραφα, θα εμφανίζει το περιεχόμενό τους (π.χ. το εξαγόμενο HTML από Word) ή έναν ενσωματωμένο viewer (π.χ., PDF.js).
*   **FR-2.4 Διάταξη Περιεχομένου (Layout):** Το LLM Agent θα αποφασίζει για την καλύτερη διάταξη του περιεχομένου, συνδυάζοντας κείμενο, εικόνες και βίντεο με έναν μοντέρνο και ελκυστικό τρόπο (π.χ., κείμενο δίπλα σε εικόνα, γκαλερί κάτω από μια περιγραφή).
*   **FR-2.5 Πλοήγηση:** Θα δημιουργεί ένα μενού πλοήγησης στην κορυφή της σελίδας. Τα στοιχεία του μενού (π.χ., "Εικόνες", "Βίντεο", "Έγγραφα") θα λειτουργούν ως якоря (anchors), που θα οδηγούν τον χρήστη στην αντίστοιχη ενότητα της σελίδας.

---

#### 3. Μη Λειτουργικές Απαιτήσεις (Non-Functional Requirements)

*   **NFR-1 Performance:** Η τελική ιστοσελίδα πρέπει να είναι εξαιρετικά γρήγορη. Όλες οι εικόνες και τα βίντεο πρέπει να χρησιμοποιούν lazy loading. Ο κώδικας JavaScript πρέπει να είναι ελάχιστος (Astro Islands Architecture).
*   **NFR-2 Design & UI:**
    *   Μοντέρνος, καθαρός και μινιμαλιστικός σχεδιασμός.
    *   Responsive design που προσαρμόζεται άψογα σε desktop, tablet και mobile συσκευές.
    *   Έμφαση στην οπτική παρουσίαση των πολυμέσων.
    *   Χρήση του **Tailwind CSS** για το styling, καθώς η utility-first προσέγγισή του είναι ιδανική για κώδικα που παράγεται από LLM.
*   **NFR-3 Αυτοματισμός (Automation):** Η όλη διαδικασία, από την ανάγνωση των αρχικών αρχείων μέχρι την τελική δημοσίευση (deployment), πρέπει να είναι πλήρως αυτοματοποιημένη και να εκτελείται μέσω CLI εντολών.
*   **NFR-4 Τεχνολογικό Stack (Tech Stack):** Το σύστημα θα βασιστεί στο προτεινόμενο tech stack από το έγγραφο `tech-stack-document.md`, με κύρια στοιχεία:
    *   **Core:** Node.js, Astro, Tailwind CSS.
    *   **File Processing:** Sharp (εικόνες), fluent-ffmpeg (βίντεο), pdf-parse, mammoth, xlsx.
    *   **UI Components:** Swiper.js, PhotoSwipe, Video.js.
    *   **CLI:** Commander.js.
*   **NFR-5 Deployment:** Το σύστημα πρέπει να υποστηρίζει αυτόματη δημοσίευση (deployment) της στατικής ιστοσελίδας σε πλατφόρμες όπως **Cloudflare Pages**, Vercel ή GitHub Pages, μέσω εντολών του CLI.

---

#### 4. CLI Interface για το LLM Agent

Το LLM Agent θα αλληλεπιδρά με το σύστημα μέσω ενός CLI tool. Οι βασικές εντολές πρέπει να είναι:

*   `project-cli init <source>`: Αρχικοποιεί ένα νέο project από μια πηγή (URL του GitHub repo ή τοπική διαδρομή).
*   `project-cli scan`: Σαρώνει και αναλύει τα αρχεία στην πηγή.
*   `project-cli organize`: Εκτελεί το **ΒΗΜΑ 1** (επεξεργασία και οργάνωση αρχείων).
*   `project-cli generate`: Εκτελεί το **ΒΗΜΑ 2** (δημιουργία της ιστοσελίδας Astro).
*   `project-cli build`: Κάνει build την τελική στατική ιστοσελίδα (τρέχει `astro build`).
*   `project-cli deploy <platform>`: Δημοσιεύει την ιστοσελίδα στην επιλεγμένη πλατφόρμα (π.χ., `cloudflare`).
*   `project-cli clean`: Καθαρίζει όλους τους παραγόμενους φακέλους και αρχεία για μια νέα αρχή.

Μια πλήρης ροή θα μπορούσε να εκτελεστεί με μία εντολή, π.χ. `project-cli run <source> --deploy=cloudflare`.

---

#### 5. Κριτήρια Αποδοχής (Acceptance Criteria)

*   **AC-1:** Ο χρήστης μπορεί να δώσει ένα GitHub URL και το σύστημα να παράγει και να δημοσιεύσει αυτόματα μια πλήρη ιστοσελίδα χωρίς καμία χειροκίνητη παρέμβαση.
*   **AC-2:** Η τελική ιστοσελίδα είναι ένα single-page application με πλοήγηση μέσω anchors.
*   **AC-3:** Όλα τα πολυμέσα (εικόνες, βίντεο) είναι βελτιστοποιημένα για το web και φορτώνουν με lazy loading.
*   **AC-4:** Το περιεχόμενο από αρχεία Word, Excel και PDF εμφανίζεται σωστά μέσα στη σελίδα.
*   **AC-5:** Η ιστοσελίδα έχει άριστο σκορ (>90) σε Performance, Accessibility, και SEO στις μετρήσεις του Google Lighthouse.
*   **AC-6:** Το σύστημα λειτουργεί ανεξάρτητα από το περιεχόμενο του έργου. Δύο διαφορετικά έργα με διαφορετικά αρχεία παράγουν δύο διαφορετικές, αλλά εξίσου λειτουργικές και αισθητικά άρτιες ιστοσελίδες.

<!--
[PROMPT_SUGGESTION]Βάσει του PRD, δημιούργησε το αρχείο `package.json` με όλα τα απαραίτητα scripts και dependencies.[/PROMPT_SUGGESTION]
[PROMPT_SUGGESTION]Γράψε το σενάριο Node.js `scripts/scan-project.js` που θα σαρώνει έναν φάκελο και θα κατηγοριοποιεί τα αρχεία ανά τύπο (εικόνες, βίντεο, έγγραφα).[/PROMPT_SUGGESTION]
-->
